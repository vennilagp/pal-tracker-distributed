import io.pivotal.pal.tracker.gradlebuild.DependenciesGraphPlugin

buildscript {
    ext {
        springBootVersion = "2.0.6.RELEASE"
        springVersion = "5.0.9.RELEASE"
        mysqlVersion = "8.0.13"
        jacksonVersion = "2.9.7"
        slf4jVersion = "1.7.25"
        mockitoVersion = "2.23.0"
        assertJVersion = "3.11.1"
        hikariVersion = "3.1.0"
        logbackVersion = "1.2.3"
        junitVersion = "4.12"
        okhttpVersion = "3.12.0"
        jsonPathVersion = "2.4.0"
        springCloudVersion = "Finchley.RELEASE"
        springCloudServicesClientLibrariesVersion = "2.0.3.RELEASE"
        springSecurityOAuthAutoconfigVersion = "2.1.0.RELEASE"
        springCloudSsoVersion = "2.1.3.RELEASE"
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
    	classpath("io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE")
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "mysql:mysql-connector-java:$mysqlVersion"
    }
}

apply plugin: DependenciesGraphPlugin
apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE"
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:2.0.3.RELEASE"
    }
}

subprojects {
    group "io.pivotal.pal.tracker"

    apply plugin: "java"
    defaultTasks "clean", "build"

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-core:$mockitoVersion"
        testCompile "org.assertj:assertj-core:$assertJVersion"
    }

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }
}
